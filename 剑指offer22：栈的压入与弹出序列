#pragma once
#include<stack>
#include<assert.h>
//面试22：
//栈的压入与弹出序列 
//输入两个整数序列 ，，，，第一个序列是 压栈序列，，，判断第二个序列是不是 该栈的弹出序列 



//ppush是压栈序列，，ppop是要判断的出栈序列，，，，n为数组长度
bool IsPopOrder(const  int *  ppush,const int * ppop,const  int n)
{
	assert(ppush);
	assert(ppop);
	assert(n > 0);
	//建立一个辅助的栈
	stack<int> st;
	int i = 0 ;
	int j = 0 ;
	//先将第一个数据元素压入栈中 
	st.push(ppush[i]);
	while(j < n )
	{
		if(st.top() == ppop[j])
		{
			st.pop();
			++j;
		}
		else
		{
			++i;
			if(i == n)
				return  false;
			st.push(ppush[i]);
		}
	}
	return true;	
}

void Test()
{
	int  array[]  = {1,2,3,4,5};
	int  array2[] ={4,3,5,1,2};
	cout<<IsPopOrder(array,array2,5)<<endl;

}


